name: java-jre-ondra
summary: java 8 Zulu runtime snap
description: |
 Java 8 run time snap, this snap is intented to be used by other snap_fileset
 using content interface

base: core18
confinement: strict
grade: stable
adopt-info: jre

architectures:
    - build-on: armhf
    - build-on: arm64
    - build-on: i386
    - build-on: amd64

slots:
  jre:
    interface: content
    read:
      - $SNAP

environment:
    JAVA_HOME:  ${SNAP}/jre
    PATH:       ${SNAP}/jre/bin:${SNAP}/usr/sbin:${SNAP}/usr/bin:${SNAP}/sbin:${SNAP}/bin:${PATH}


apps:
    info:
        adapter: none
        command: print-info

parts:
    # java run time
    jre:
        plugin: nil
        override-pull: |
          wget -O index.html https://www.azul.com/downloads/zulu-community
          grep "JSON.stringify(sortArray(" index.html | sed -e "s/localStorage.setItem('arrayZuluBandlesZulu', JSON.stringify(sortArray(//g" -e "s/)));//g" > index.json
          echo "SNAPCRAFT_ARCH_TRIPLET=${SNAPCRAFT_ARCH_TRIPLET}"
          if [ "${SNAPCRAFT_ARCH_TRIPLET}" = "arm-linux-gnueabihf" ]; then
              jq -c 'sort_by(.zulu_version) | .[] | select( .arch == "ARM 32-bit HF" ) | select( .category == "Java 8 (LTS)" ) | select( .arch_slug = "arm-32-bit-hf" ) | select( .packaging_slug == "jdk" ) | select(.os|index( "Linux" ))' index.json | jq -sr '.[-1]' > ${SNAPCRAFT_PART_INSTALL}/zulu_version.json
          elif [ "${SNAPCRAFT_ARCH_TRIPLET}" = "aarch64-linux-gnu" ]; then
              jq -c 'sort_by(.zulu_version) | .[] | select( .arch == "ARM 64-bit" ) | select( .category == "Java 8 (LTS)" ) | select( .arch_slug = "arm-64-bit" ) | select( .packaging_slug == "jdk" ) | select(.os|index( "Linux" ))' index.json | jq -sr '.[-1]' > ${SNAPCRAFT_PART_INSTALL}/zulu_version.json
          elif [ "${SNAPCRAFT_ARCH_TRIPLET}" = "x86_64-linux-gnu" ]; then
              jq -c 'sort_by(.zulu_version) | .[] | select( .arch == "x86 64-bit" ) | select( .category == "Java 8 (LTS)" ) | select( .arch_slug = "x86-64-bit" ) | select( .packaging_slug == "jdk" ) | select(.os|index( "Linux" ))' index.json | jq -sr '.[-1]' > ${SNAPCRAFT_PART_INSTALL}/zulu_version.json
          else
              jq -c 'sort_by(.zulu_version) | .[] | select( .arch == "x86 32-bit" ) | select( .category == "Java 8 (LTS)" ) | select( .arch_slug = "x86-32-bit" ) | select( .packaging_slug == "jdk" ) | select(.os|index( "Linux" ))' index.json | jq -sr '.[-1]' > ${SNAPCRAFT_PART_INSTALL}/zulu_version.json
          fi
          tar_link=$(jq -r '.bundles[] | select (.extension == "tar.gz") | .link' ${SNAPCRAFT_PART_INSTALL}/zulu_version.json )
          wget -O zulu.tar.gz ${tar_link}
          tar -C ${SNAPCRAFT_PART_INSTALL} -xf zulu.tar.gz --strip 1
          VERSION=$(grep JAVA_VERSION ${SNAPCRAFT_PART_INSTALL}/release | sed 's/.*="\(.*\)"/\1/' | sed 's/_/-/g' )
          snapcraftctl set-version ${VERSION}
        stage:
          - -bin
          - -demo
          - -include
          - -lib
          - -man
          - -sample
          - -src.zip
          - -jre/lib/aarch32/client/libjvm.diz
          - -jre/lib/aarch64/server/libjvm.diz
        organize:
          LICENSE: LICENSE_ZULU
          release: release_zulu
        build-packages:
          - jq

    dependencies:
        plugin: nil
        stage-packages:
            - libasound2
            - libx11-6
            - libxau6
            - libxcb1
            - libxdmcp6
            - libxext6
            - libxi6
            - libxrender1
            - libxtst6
    info:
        plugin: dump
        source: glue

build-packages:
    - wget
