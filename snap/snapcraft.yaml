name: java-jre-ondra
summary: java 8 Zulu runtime snap
description: |
 Java 8 run time snap, this snap is intented to be used by other snap_fileset
 using content interface

base: core18
confinement: strict
grade: stable
adopt-info: jre

architectures:
    - build-on: armhf
    - build-on: arm64
    - build-on: i386
    - build-on: amd64

slots:
  jre:
    interface: content
    read:
      - $SNAP

environment:
    JAVA_HOME:  ${SNAP}/jre
    PATH:       ${SNAP}/jre/bin:${SNAP}/usr/sbin:${SNAP}/usr/bin:${SNAP}/sbin:${SNAP}/bin:${PATH}


apps:
    info:
        adapter: none
        command: print-info

parts:
    # java run time
    jre:
        plugin: nil
        override-pull: |
          echo "SNAPCRAFT_ARCH_TRIPLET=${SNAPCRAFT_ARCH_TRIPLET}"
          if [ "${SNAPCRAFT_ARCH_TRIPLET}" = "arm-linux-gnueabihf" ]; then
              curl -H "Accept: application/json" "https://api.azul.com/zulu/download/community/v1.0/bundles/?zulu_version=8&ext=tar.gz&os=linux&arch=arm&hw_bitness=32&bundle_type=jdk" | jq -c 'sort_by(.id) | .[] | select(.name | contains("aarch32hf"))' | jq -s '.[-1]' > ${SNAPCRAFT_PART_INSTALL}/zulu_version.json
          elif [ "${SNAPCRAFT_ARCH_TRIPLET}" = "aarch64-linux-gnu" ]; then
              curl -H "Accept: application/json" "https://api.azul.com/zulu/download/community/v1.0/bundles/latest/?zulu_version=8&ext=tar.gz&os=linux&arch=arm&hw_bitness=64&bundle_type=jdk" | jq . > ${SNAPCRAFT_PART_INSTALL}/zulu_version.json
          elif [ "${SNAPCRAFT_ARCH_TRIPLET}" = "x86_64-linux-gnu" ]; then
              curl -H "Accept: application/json" "https://api.azul.com/zulu/download/community/v1.0/bundles/latest/?zulu_version=8&ext=tar.gz&os=linux&arch=x86&hw_bitness=64&bundle_type=jdk" | jq . > ${SNAPCRAFT_PART_INSTALL}/zulu_version.json
          else
              curl -H "Accept: application/json" "https://api.azul.com/zulu/download/community/v1.0/bundles/latest/?zulu_version=8&ext=tar.gz&os=linux&arch=x86&hw_bitness=32&bundle_type=jdk" | jq . > ${SNAPCRAFT_PART_INSTALL}/zulu_version.json
          fi
          tar_link=$(jq -r '.url' ${SNAPCRAFT_PART_INSTALL}/zulu_version.json)
          echo "tar_link=[${tar_link}]"
          wget -O zulu.tar.gz ${tar_link}
          tar -C ${SNAPCRAFT_PART_INSTALL} -xf zulu.tar.gz --strip 1
          version=$(grep JAVA_VERSION ${SNAPCRAFT_PART_INSTALL}/release | sed 's/.*="\(.*\)"/\1/' | sed 's/_/-/g' )
          echo "version=${version}"
          snapcraftctl set-version ${version}
        stage-packages:
          - libcairo2
          - libdatrie1
          - libfontconfig1
          - libgdk-pixbuf2.0-0
          - libgl1
          - libglvnd0
          - libglx0
          - libgraphite2-3
          - libharfbuzz0b
          - libpango-1.0-0
          - libpangocairo-1.0-0
          - libpangoft2-1.0-0
          - libpixman-1-0
          - libpng16-16
          - libthai0
          - libxcb-render0
          - libxcb-shm0
          - libxxf86vm1
        stage:
          - -bin
          - -demo
          - -include
          - -lib
          - -man
          - -sample
          - -src.zip
          - -jre/lib/aarch32/client/libjvm.diz
          - -jre/lib/aarch64/server/libjvm.diz
        organize:
          LICENSE: LICENSE_ZULU
          release: release_zulu

    dependencies:
        plugin: nil
        stage-packages:
            - libasound2
            - libx11-6
            - libxau6
            - libxcb1
            - libxdmcp6
            - libxext6
            - libxi6
            - libxrender1
            - libxtst6
    info:
        plugin: dump
        source: glue

build-packages:
    - jq
    - curl
    - wget
